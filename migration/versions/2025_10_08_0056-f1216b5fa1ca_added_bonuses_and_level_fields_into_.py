"""Added bonuses and level fields into users table

Revision ID: a03b37e7fba5
Revises: fcf258a7f5ed
Create Date: 2025-10-08 00:52:58.510685

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = 'a03b37e7fba5'
down_revision: Union[str, None] = 'fcf258a7f5ed'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    user_status_enum = postgresql.ENUM(
        'READER', 'EXPERT', 'ERUDITE', 'GENIUS',
        name='user_status_type'
    )
    user_status_enum.create(op.get_bind(), checkfirst=True)

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('bonuses', sa.Integer(), server_default='0', nullable=False))
        batch_op.add_column(sa.Column('level', sa.Enum('READER', 'EXPERT', 'ERUDITE', 'GENIUS', name='user_status_type'), server_default='READER', nullable=False))

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_column('level')
        batch_op.drop_column('bonuses')

    user_status_enum = postgresql.ENUM(
        'READER', 'EXPERT', 'ERUDITE', 'GENIUS',
        name='user_status_type'
    )
    user_status_enum.drop(op.get_bind(), checkfirst=True)

    # ### end Alembic commands ###